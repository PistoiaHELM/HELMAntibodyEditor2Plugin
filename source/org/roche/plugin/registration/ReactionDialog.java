/*******************************************************************************
 * Copyright C 2016, Roche pREDi (Roche Innovation Center Munich)
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
 * Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 ******************************************************************************/


package org.roche.plugin.registration;

import java.awt.Cursor;
import java.awt.Frame;

import javax.swing.JOptionPane;

import org.roche.antibody.model.antibody.Antibody;
import org.roche.antibody.services.ConfigFileService;
import org.roche.antibody.services.ProteaseDescription;
import org.roche.antibody.ui.components.AntibodyEditorAccess;
import org.roche.plugin.reactions.rest.ADCReactions;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 
 * {@code ReactionDialog} is used to start N or C terminal sortase coupling.
 * 
 * @author <b>Stefan Klostermann:</b> Stefan DOT Klostermann AT roche DOT com, Roche Pharma Research and Early
 *         Development - Informatics, Roche Innovation Center Munich
 * @author <b>Marco Lanig:</b> lanig AT quattro-research DOT com, quattro research GmbH
 * @author <b>Sabrina Hecht:</b> hecht AT quattro-research DOT com, quattro research GmbH
 * @version $Id$
 */
public class ReactionDialog extends javax.swing.JDialog {

  private static final long serialVersionUID = 3472521963929047954L;

  /** The Logger for this class */
  @SuppressWarnings("unused")
  private static final Logger Log = LoggerFactory.getLogger(ReactionDialog.class);

  private Frame parent;

  /**
   * Creates new form ReactionDialog1
   */
  public ReactionDialog(java.awt.Frame parent, boolean modal) {
    super(parent, modal);

    initComponents();
    this.parent = parent;
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated
  // Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    buttonGroup1 = new javax.swing.ButtonGroup();
    jRadioButton1 = new javax.swing.JRadioButton();
    jRadioButton2 = new javax.swing.JRadioButton();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    runButton = new javax.swing.JButton();
    clearButton = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    peptideSequence = new javax.swing.JTextArea();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setTitle("Coupling with protein");

    buttonGroup1.add(jRadioButton1);
    jRadioButton1.setSelected(true);
    jRadioButton1.setText("N-Terminal");
    jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jRadioButton1ActionPerformed(evt);
      }
    });

    buttonGroup1.add(jRadioButton2);
    jRadioButton2.setText("C-Terminal");
    jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jRadioButton2ActionPerformed(evt);
      }
    });

    jLabel1.setText("Specify the protein sequence:");

    jLabel2.setText("Protein Sequence: ");

    jLabel3.setText("Specify the coupling site: ");

    runButton.setText("Run");
    runButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        runButtonActionPerformed(evt);
      }
    });

    clearButton.setText("Clear");
    clearButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        clearButtonActionPerformed(evt);
      }
    });

    peptideSequence.setColumns(20);
    peptideSequence.setRows(5);
    jScrollPane2.setViewportView(peptideSequence);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup().addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING,
                    javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE)
                .addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(runButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(
                        clearButton))
                .addGroup(layout.createSequentialGroup().addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jRadioButton1).addGap(18, 18, 18).addComponent(jRadioButton2)
                    .addGap(0, 79, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup().addComponent(jLabel2).addGap(18, 18, 18)
                    .addComponent(jScrollPane2)))
            .addContainerGap()));
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
        .createSequentialGroup().addGap(28, 28, 28).addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel2)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 188,
                javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3)
            .addComponent(jRadioButton1).addComponent(jRadioButton2))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(runButton)
            .addComponent(clearButton))
        .addContainerGap(13, Short.MAX_VALUE)));

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jRadioButton2ActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_jRadioButton2ActionPerformed

  private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_runButtonActionPerformed
    try {
      this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
      parent.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
      String peptideInput = "";

      if (!(peptideSequence.getText().isEmpty())) {
        peptideInput = peptideSequence.getText().toUpperCase().trim();
      } else {
        throw new RuntimeException("Protein Description is empty!");
      }

      ProteaseDescription sortase = null;
      for (ProteaseDescription proteaseDesc : ConfigFileService.getInstance().getProteaseDescriptions()) {
        if (proteaseDesc.getProteaseName().equalsIgnoreCase("sortase")) {
          sortase = proteaseDesc;
          break;
        }
      }

      if (sortase == null) {
        throw new RuntimeException("Sortase Description was not found!");
      }

      Antibody original = AntibodyEditorAccess.getInstance().getAntibodyEditorPane().getAntibody();
      Antibody cleavedAntibody = ADCReactions
          .cleave(AntibodyEditorAccess.getInstance().getAntibodyEditorPane().getAntibody(), -1, sortase);
      String couplingType = null;
      if (jRadioButton1.isSelected()) {
        couplingType = "N";
      } else {
        couplingType = "C";
      }
      Antibody coupledAntibody = ADCReactions.sortaseCouplingPeptide(cleavedAntibody, peptideInput, couplingType,
          sortase);

      AntibodyEditorAccess.getInstance().getAntibodyEditorPane().setModel(coupledAntibody);

      this.dispose();
    } catch (Exception e) {
      e.printStackTrace();

      JOptionPane.showMessageDialog(this,
          String.format("Could not couple antibody with peptide", e.getClass().getName(),
              e.getCause() == null ? "" : e.getCause().getMessage()),
          "Initialization failed", JOptionPane.ERROR_MESSAGE);

      this.dispose();

    } finally {
      this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
      parent.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }
  }// GEN-LAST:event_runButtonActionPerformed

  private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_clearButtonActionPerformed
    peptideSequence.setText("");
    jRadioButton1.setSelected(true);
  }// GEN-LAST:event_clearButtonActionPerformed

  private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jRadioButton1ActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_jRadioButton1ActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting
    // code (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf. html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(ReactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null,
          ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(ReactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null,
          ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(ReactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null,
          ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(ReactionDialog.class.getName()).log(java.util.logging.Level.SEVERE, null,
          ex);
    }
    // </editor-fold>
    // </editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        ReactionDialog dialog = new ReactionDialog(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.ButtonGroup buttonGroup1;

  private javax.swing.JButton clearButton;

  private javax.swing.JLabel jLabel1;

  private javax.swing.JLabel jLabel2;

  private javax.swing.JLabel jLabel3;

  private javax.swing.JRadioButton jRadioButton1;

  private javax.swing.JRadioButton jRadioButton2;

  private javax.swing.JScrollPane jScrollPane2;

  private javax.swing.JTextArea peptideSequence;

  private javax.swing.JButton runButton;
  // End of variables declaration//GEN-END:variables
}
